////////////////////////////////////////////////////////////////////////////////////////////////////
//
// Source: UVa 11034 - Ferry Loading IV
// Author: Yang, Sichao
// Email:  sichao@cs.wisc.edu
//
////////////////////////////////////////////////////////////////////////////////////////////////////
package Java_Queue_and_Deque;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.PrintWriter;
import java.util.LinkedList;

class Car2 {
    static int i;
    int index;
    int len;
    
    public Car2(int l) {
        index = i++;
        len = l;
    }
}

/**
 * Simulation with queues.
 */
public class UVa11034FerryLoadingIV {
    public static void main(String[] args) throws IOException {
        BufferedReader reader = new BufferedReader(new InputStreamReader(System.in), 1000);
        PrintWriter writer = new PrintWriter(System.out);
        
        int c = Integer.parseInt(reader.readLine());
        while (c-- > 0) {
            String[] lm = reader.readLine().split(" ");
            int l = Integer.parseInt(lm[0]), m = Integer.parseInt(lm[1]);
            int[] times = new int[m];
            LinkedList<Car> left = new LinkedList<>(), right = new LinkedList<>();
            Car.i = 0;
            while (m-- > 0) {
                String[] input = reader.readLine().split(" ");
                Car car = new Car(Integer.parseInt(input[0]));
                if (input[1].equals("left")) left.add(car);
                else right.add(car);
            }
            boolean onLeft = true;
            while (!left.isEmpty() || !right.isEmpty()) {
                T = Math.max(T, Math.min(left.isEmpty() ? Integer.MAX_VALUE : left.peek().time,
                                        right.isEmpty() ? Integer.MAX_VALUE : right.peek().time));
                LinkedList<Car> side = onLeft ? left : right;
                for (int i = 0; i < n && !side.isEmpty() && side.peek().time <= T; i++)
                    times[side.poll().index] = T + t;
                T += t;
                onLeft = !onLeft;
            }
            for (Integer time : times) writer.println(time);
            if (c > 0) writer.println();
        }
        
        reader.close();
        writer.close();
    }
}