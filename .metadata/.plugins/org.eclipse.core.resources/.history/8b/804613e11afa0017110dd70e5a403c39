////////////////////////////////////////////////////////////////////////////////////////////////////
//
// Source: UVa 10172 - The Lonesome Cargo Distributor
// Author: Yang, Sichao
// Email:  sichao@cs.wisc.edu
//
////////////////////////////////////////////////////////////////////////////////////////////////////
package Java_Queue_and_Deque;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.PrintWriter;
import java.util.LinkedList;
import java.util.StringTokenizer;

@SuppressWarnings("serial")
class Queue extends LinkedList<Integer> {
//    LinkedList<Integer> list = new LinkedList<>();
//    boolean isEmpty() { return list.isEmpty(); }
//    void add(Integer i) { list.add(i); }
//    Integer poll() { return list.poll(); }
}

/**
 * Simulation with both stack and queue.
 */
public class UVa10172TheLonesomeCargoDistributor {
    public static void main(String[] args) throws IOException {
        BufferedReader reader = new BufferedReader(new InputStreamReader(System.in), 1000);
        PrintWriter writer = new PrintWriter(System.out);
        
        int SET = Integer.parseInt(reader.readLine());
        while (SET-- > 0) {
            String[] NSQ = reader.readLine().split(" ");
            int N = Integer.parseInt(NSQ[0]), S = Integer.parseInt(NSQ[1]), Q = Integer.parseInt(NSQ[2]);
            Queue[] queues = new Queue[100];
            for (int i = 0; i < N; i++) {
                StringTokenizer tk = new StringTokenizer(reader.readLine());
                int Qi = Integer.parseInt(tk.nextToken());
                queues[i] = new Queue();
                while (Qi-- > 0) queues[i].add(Integer.parseInt(tk.nextToken()));
            }
        }
        
        reader.close();
        writer.close();
    }
}
